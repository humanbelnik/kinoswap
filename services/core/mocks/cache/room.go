// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/humanbelnik/kinoswap/core/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// EmptyRoomsIDSet is an autogenerated mock type for the EmptyRoomsIDSet type
type EmptyRoomsIDSet struct {
	mock.Mock
}

// Add provides a mock function with given fields: ctx, roomID
func (_m *EmptyRoomsIDSet) Add(ctx context.Context, roomID model.RoomID) error {
	ret := _m.Called(ctx, roomID)

	if len(ret) == 0 {
		panic("no return value specified for Add")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.RoomID) error); ok {
		r0 = rf(ctx, roomID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Remove provides a mock function with given fields: ctx
func (_m *EmptyRoomsIDSet) Remove(ctx context.Context) (model.RoomID, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for Remove")
	}

	var r0 model.RoomID
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (model.RoomID, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) model.RoomID); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(model.RoomID)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewEmptyRoomsIDSet creates a new instance of EmptyRoomsIDSet. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmptyRoomsIDSet(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmptyRoomsIDSet {
	mock := &EmptyRoomsIDSet{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
