// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/humanbelnik/kinoswap/core/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// EmbeddingRepository is an autogenerated mock type for the EmbeddingRepository type
type EmbeddingRepository struct {
	mock.Mock
}

// Append provides a mock function with given fields: ctx, roomID, e
func (_m *EmbeddingRepository) Append(ctx context.Context, roomID model.RoomID, e model.Embedding) error {
	ret := _m.Called(ctx, roomID, e)

	if len(ret) == 0 {
		panic("no return value specified for Append")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.RoomID, model.Embedding) error); ok {
		r0 = rf(ctx, roomID, e)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEmbeddingRepository creates a new instance of EmbeddingRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmbeddingRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmbeddingRepository {
	mock := &EmbeddingRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
