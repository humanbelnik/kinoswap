openapi: 3.0.0
info:
  title: Kinoswap API
  contact: {}
  version: "1.0"
paths:
  /movies:
    get:
      description: Возвращает список всех фильмов в системе
      tags:
        - Movies operations
      summary: Получение списка фильмов
      responses:
        "200":
          description: Список фильмов успешно получен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_movie.MoviesListResponseDTO"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
    post:
      description: Создает новый фильм в системе
      tags:
        - Movies operations
      summary: Создание фильма
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/http_movie.CreateMovieRequestDTO"
        description: Данные для создания фильма
        required: true
      responses:
        "201":
          description: Фильм успешно создан
        "400":
          description: Некорректные данные запроса
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
  "/movies/{id}":
    put:
      description: Обновляет данные фильма по идентификатору
      tags:
        - Movies operations
      summary: Обновление фильма
      parameters:
        - example: '"550e8400-e29b-41d4-a716-446655440000"'
          description: UUID фильма
          name: movie_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/http_movie.UpdateMovieRequestDTO"
        description: Данные для обновления фильма
        required: true
      responses:
        "200":
          description: Фильм успешно обновлен
        "400":
          description: Некорректные данные запроса
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
        "404":
          description: Фильм не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
    delete:
      description: Удаляет фильм по идентификатору
      tags:
        - Movies operations
      summary: Удаление фильма
      parameters:
        - example: '"550e8400-e29b-41d4-a716-446655440000"'
          description: UUID фильма
          name: movie_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Фильм успешно удален
        "400":
          description: Некорректный UUID фильма
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
        "404":
          description: Фильм не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
  /rooms:
    get:
      description: Выделяет команату для голосования и возвращет ее идентификатор
      tags:
        - Rooms opertaions
      summary: Выделить комнату для голосования
      responses:
        "200":
          description: Комната успешно создана
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_room.AcquireRoomResponseDTO"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
  "/rooms/{room_id}":
    get:
      description: Проверяет доступ к комнате
      tags:
        - Rooms opertaions
      summary: Проверяет доступ к комнате
      parameters:
        - example: '"123456"'
          description: Идентификатор комнаты
          name: room_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Комната существует
        "403":
          description: Комната закрыта
          content:
            application/json:
              schema:
                type: objet
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
    delete:
      description: Освобождает ресурсы комнаты и делает её готовй для последующей резервации
      tags:
        - Rooms opertaions
      summary: Освобождение комнаты
      parameters:
        - example: '"123456"'
          description: Идентификатор комнаты
          name: room_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Комната успешно освобождена
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
  "/rooms/{room_id}/participation":
    post:
      description: Позволяет пользователю присоединиться к голосованию с указнием пожеланий
      tags:
        - Rooms opertaions
      summary: Участие в комнате
      parameters:
        - example: '"123456"'
          description: Идентификатор комнаты
          name: room_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/http_room.ParticipateRequestDTO"
        description: Предпочтения пользователя
        required: true
      responses:
        "202":
          description: Участник добавлен в пул голосующих
        "400":
          description: Некорректный формат тела запроса
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
  "/rooms/{room_id}/voting/movies":
    get:
      description: Возвращает список фильмов доступных для голосования в комнате
      tags:
        - Movies operations
      summary: Получение фильмов для голосования
      parameters:
        - example: '"550e8400-e29b-41d4-a716-446655440000"'
          description: Идентификатор комнаты
          name: room_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Список фильмов для голосования
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_movie.MoviesListResponseDTO"
        "404":
          description: Комната не найдена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
  "/rooms/{room_id}/voting/results":
    get:
      description: Возвращает массив фильмов с количеством лайков для текущей или
        завершенной сессии голосования
      tags:
        - Voting operations
      summary: Получить результаты голосования
      parameters:
        - example: '"123456"'
          description: Идентификатор комнаты
          name: room_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Результаты голосования
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/http_voting.MovieResultDTO"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
  "/rooms/{room_id}/voting/status":
    patch:
      description: Изменяет статус сессии голосования
      tags:
        - Voting operations
      summary: Изменить статус голосования
      parameters:
        - example: '"123456"'
          description: Идентификатор комнаты
          name: room_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/http_voting.VotingStatusRequestDTO"
        description: Новый статус голосования
        required: true
      responses:
        "200":
          description: Статус успешно обновлен
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
  "/rooms/{room_id}/voting/votes":
    post:
      description: Принимает массив голосов (movie_id, liked) и регистрирует их для
        текущей сессии голосования
      tags:
        - Voting operations
      summary: Отправить результаты голосования
      parameters:
        - example: '"123456"'
          description: Идентификатор комнаты
          name: room_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/http_voting.VoteRequestDTO"
        description: Массив голосов за фильмы
        required: true
      responses:
        "200":
          description: Голоса успешно приняты
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/http_common.ErrorResponse"
servers:
  - url: //localhost:8080/api/v1
components:
  schemas:
    http_common.ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: something bad happened...
    http_movie.CreateMovieRequestDTO:
      type: object
      required:
        - genres
        - overview
        - poster_link
        - rating
        - title
        - year
      properties:
        genres:
          type: array
          items:
            type: string
          example:
            - фантастика
            - драма
            - приключения
        overview:
          type: string
          example: Захватывающая история о путешествии через червоточину...
        poster_link:
          type: string
          example: https://example.com/poster.jpg
        rating:
          type: number
          example: 8.6
        title:
          type: string
          example: Интерстеллар
        year:
          type: integer
          example: 2014
    http_movie.MovieResponseDTO:
      type: object
      properties:
        genres:
          type: array
          items:
            type: string
          example:
            - фантастика
            - драма
            - приключения
        id:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
        overview:
          type: string
          example: Захватывающая история о путешествии через червоточину...
        poster_link:
          type: string
          example: https://example.com/poster.jpg
        rating:
          type: number
          example: 8.6
        title:
          type: string
          example: Интерстеллар
        year:
          type: integer
          example: 2014
    http_movie.MoviesListResponseDTO:
      type: object
      properties:
        movies:
          type: array
          items:
            $ref: "#/components/schemas/http_movie.MovieResponseDTO"
        total:
          type: integer
    http_movie.UpdateMovieRequestDTO:
      type: object
      properties:
        genres:
          type: array
          items:
            type: string
          example:
            - фантастика
            - драма
            - приключения
        overview:
          type: string
          example: Обновленное описание фильма...
        poster_link:
          type: string
          example: https://example.com/new-poster.jpg
        rating:
          type: number
          example: 8.7
        title:
          type: string
          example: Интерстеллар (обновленное)
        year:
          type: integer
          example: 2014
    http_room.AcquireRoomResponseDTO:
      type: object
      properties:
        room_id:
          type: string
          example: "123456"
    http_room.ParticipateRequestDTO:
      type: object
      properties:
        text:
          type: string
    http_voting.MovieResultDTO:
      type: object
      properties:
        genres:
          type: array
          items:
            type: string
          example:
            - фантастика
            - драма
            - приключения
        id:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
        likes_count:
          type: integer
          example: 5
        overview:
          type: string
          example: Захватывающая история...
        poster_link:
          type: string
          example: https://example.com/poster.jpg
        rating:
          type: number
          example: 8.6
        title:
          type: string
          example: Интерстеллар
        year:
          type: integer
          example: 2014
    http_voting.MovieVoteDTO:
      type: object
      properties:
        liked:
          type: boolean
          example: true
        movie_id:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
    http_voting.VoteRequestDTO:
      type: object
      properties:
        votes:
          type: array
          items:
            $ref: "#/components/schemas/http_voting.MovieVoteDTO"
    http_voting.VotingStatusRequestDTO:
      type: object
      properties:
        status:
          type: string
          enum:
            - start
            - restart
            - finish
          example: active
