services:
  dev_db:
    image: postgres:13-alpine
    container_name: ${DB_NAME}
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./migration:/migration

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 1s
      timeout: 3s
      retries: 30

  migrate:
    image: migrate/migrate
    depends_on:
      dev_db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DB_HOST: dev_db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SSLMODE: disable
    volumes:
      - ./migration:/migration
    command:
      - "-path=/migration"
      - "-database=postgres://${DB_USER}:${DB_PASSWORD}@dev_db:5432/${DB_NAME}?sslmode=disable"
      - "up"

  redis:
    image: redis:7.2-alpine
    container_name: redis-kinoswap
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - ./redis_data:/data
